/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employee.payroll;

import com.itextpdf.text.BaseColor;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JFileChooser;
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.text.SimpleDateFormat;

/**
 *
 * @author vishal
 */
public class searchEmpSalary extends javax.swing.JFrame {
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form searchEmpSalary
     */
    public searchEmpSalary() {
        initComponents();
        conn = db.java_db();

        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Database connection failed.");
        }

        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
        
        lbl_empName.setText(String.valueOf(Emp.empName));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_firstname = new javax.swing.JTextField();
        txt_surname = new javax.swing.JTextField();
        txt_dob = new javax.swing.JTextField();
        txt_department = new javax.swing.JTextField();
        txt_status = new javax.swing.JTextField();
        txt_datehired = new javax.swing.JTextField();
        txt_jobtitle = new javax.swing.JTextField();
        txt_basicsalary = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_designation = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        lbl_empName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Cascadia Code", 0, 48)); // NOI18N
        jLabel1.setText("Search Employee Salary and Generate Slip");

        jLabel2.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel2.setText("Employee ID:");

        txt_search.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        txt_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_searchActionPerformed(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel3.setText("Employee ID:");

        jLabel4.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel4.setText("First Name:");

        jLabel5.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel5.setText("Surname:");

        jLabel6.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel6.setText("Date of Birth:");

        jLabel7.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel7.setText("Department:");

        txt_id.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_firstname.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_surname.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_dob.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_department.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_status.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_datehired.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_jobtitle.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        txt_basicsalary.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel8.setText("Designation:");

        jLabel9.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel9.setText("Status:");

        jLabel10.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel10.setText("Date Hired:");

        jLabel11.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel11.setText("Job Title:");

        jLabel12.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel12.setText("Basic Salary:");

        txt_designation.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Cascadia Code", 0, 48)); // NOI18N
        jButton1.setText("Generate Slip");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N
        jLabel13.setText("Logged In As:");

        lbl_empName.setFont(new java.awt.Font("Cascadia Code", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(421, 421, 421)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_id)
                            .addComponent(txt_firstname)
                            .addComponent(txt_surname)
                            .addComponent(txt_dob)
                            .addComponent(txt_department, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_designation)
                            .addComponent(txt_status)
                            .addComponent(txt_datehired)
                            .addComponent(txt_jobtitle)
                            .addComponent(txt_basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_empName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1164, 1164, 1164))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_firstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_designation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_datehired, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_jobtitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addGap(106, 106, 106)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lbl_empName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_searchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String value = txt_firstname.getText();
        String value0 = txt_surname.getText();
        String value1 = txt_id.getText();
        String value2 = txt_designation.getText();
        String value3 = txt_department.getText();
        
        JFileChooser dialog = new JFileChooser();
        dialog.setSelectedFile(new File(value + " " + value0 + " - Salary Slip" + ".pdf"));
        int dialogResult = dialog.showSaveDialog(null);
        if(dialogResult == JFileChooser.APPROVE_OPTION) {
            String filePath = dialog.getSelectedFile().getPath();
            try {
                String sql = "SELECT * FROM deductions WHERE emp_id = ?";
                pst = conn.prepareStatement(sql);
                pst.setString(1, value1);  // Use the emp_id value
                rs = pst.executeQuery();

                String val = null;
                String reason = null;
                if (rs.next()) {
                    val = rs.getString("deduction_amount");  // Assuming deduction_amount is in the 5th column
                    reason = rs.getString("deduction_reason");  // Assuming deduction_reason is in the 6th column
                } else {
                    JOptionPane.showMessageDialog(null, "No deduction record found for this employee.");
                    return; // Exit if no record found
                }
                rs.close();
                pst.close();

                // Process the allowance data similarly
                String sq = "SELECT * FROM allowance WHERE emp_id = ?";
                pst = conn.prepareStatement(sq);
                pst.setString(1, value1);
                rs = pst.executeQuery();

                double x = 0.0;
                if (rs.next()) {
                    x = rs.getDouble("total_allowance");  // Fetch as double
                } else {
                    JOptionPane.showMessageDialog(null, "No allowance record found for this employee.");
                    return; // Exit if no record found
                }

                // Calculations
                double calcTotal = Double.parseDouble(txt_basicsalary.getText());  // Parse as double for potential decimal values
                double v = Double.parseDouble(val);  // Parse deduction amount as double
                double total = calcTotal + x - v;  // Calculate total as double
                
                Document myDocument = new Document();
                PdfWriter myWriter = PdfWriter.getInstance(myDocument, new FileOutputStream(filePath));
                
                myDocument.open();
                // Document header
                myDocument.add(new Paragraph("PAY SLIP", FontFactory.getFont(FontFactory.TIMES_BOLD, 20, Font.BOLD)));
                myDocument.add(new Paragraph(new Date().toString()));
                myDocument.add(new Paragraph("-------------------------------------------------------------------------------------------"));

                // Employee Details Section
                myDocument.add(new Paragraph("Employee Details", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.DARK_GRAY)));
                PdfPTable employeeTable = new PdfPTable(2);  // 2 columns for labels and values
                employeeTable.setWidthPercentage(100);
                employeeTable.setSpacingBefore(10f);
                employeeTable.setSpacingAfter(10f);

                // Set row height
                float minHeight = 20f;

                PdfPCell cell;

                // Employee Name
                cell = new PdfPCell(new Phrase("Name of Employee:"));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                cell = new PdfPCell(new Phrase(value + " " + value0));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                // Designation
                cell = new PdfPCell(new Phrase("Designation:"));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                cell = new PdfPCell(new Phrase(value2));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                // Department
                cell = new PdfPCell(new Phrase("Department:"));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                cell = new PdfPCell(new Phrase(value3));
                cell.setMinimumHeight(minHeight);
                employeeTable.addCell(cell);

                myDocument.add(employeeTable);

                // Salary Section
                myDocument.add(new Paragraph("Salary Details", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.DARK_GRAY)));
                PdfPTable salaryTable = new PdfPTable(2);  // 2 columns
                salaryTable.setWidthPercentage(100);
                salaryTable.setSpacingBefore(10f);
                salaryTable.setSpacingAfter(10f);

                // Basic Salary
                cell = new PdfPCell(new Phrase("Basic Salary:"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + String.format("%.2f", (double) calcTotal)));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                // Overtime
                cell = new PdfPCell(new Phrase("Overtime:"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                cell = new PdfPCell(new Phrase(rs.getString(2) + " Hours"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                // Medical
                cell = new PdfPCell(new Phrase("Medical:"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + rs.getString(3)));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                // Bonus
                cell = new PdfPCell(new Phrase("Bonus:"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + rs.getString(4)));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                // Other
                cell = new PdfPCell(new Phrase("Other:"));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + rs.getString(5)));
                cell.setMinimumHeight(minHeight);
                salaryTable.addCell(cell);

                myDocument.add(salaryTable);

                // Deduction Section
                myDocument.add(new Paragraph("Deduction Details", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.DARK_GRAY)));
                PdfPTable deductionTable = new PdfPTable(2);  // 2 columns
                deductionTable.setWidthPercentage(100);
                deductionTable.setSpacingBefore(10f);
                deductionTable.setSpacingAfter(10f);

                // Deduction Reason
                cell = new PdfPCell(new Phrase("Deduction Details:"));
                cell.setMinimumHeight(minHeight);
                deductionTable.addCell(cell);

                cell = new PdfPCell(new Phrase(reason));
                cell.setMinimumHeight(minHeight);
                deductionTable.addCell(cell);

                // Total Deductions
                cell = new PdfPCell(new Phrase("Total Deductions:"));
                cell.setMinimumHeight(minHeight);
                deductionTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + String.format("%.2f", Double.parseDouble(val))));
                cell.setMinimumHeight(minHeight);
                deductionTable.addCell(cell);

                myDocument.add(deductionTable);

                // Total Payment Section
                myDocument.add(new Paragraph("Total Payment", FontFactory.getFont(FontFactory.TIMES_ROMAN, 14, Font.BOLD, BaseColor.DARK_GRAY)));
                PdfPTable totalTable = new PdfPTable(2);  // 2 columns
                totalTable.setWidthPercentage(100);
                totalTable.setSpacingBefore(10f);
                totalTable.setSpacingAfter(10f);

                // Total Earnings
                cell = new PdfPCell(new Phrase("Total Earnings:"));
                cell.setMinimumHeight(minHeight);
                totalTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + String.format("%.2f", x)));
                cell.setMinimumHeight(minHeight);
                totalTable.addCell(cell);

                // Net Pay
                cell = new PdfPCell(new Phrase("Net Pay:"));
                cell.setMinimumHeight(minHeight);
                totalTable.addCell(cell);

                cell = new PdfPCell(new Phrase("$" + String.format("%.2f", total)));
                cell.setMinimumHeight(minHeight);
                totalTable.addCell(cell);

                myDocument.add(totalTable);

                // Footer
                myDocument.add(new Paragraph(" "));
                myDocument.add(new Paragraph("Thank you for your dedication and hard work!", FontFactory.getFont(FontFactory.TIMES_ROMAN, 10, Font.ITALIC, BaseColor.GRAY)));
                myDocument.add(new Paragraph("--------------------------------------------------------------------------"));
                myDocument.add(new Paragraph(" "));
                myDocument.newPage();
                myDocument.close();
                JOptionPane.showMessageDialog(null, "Report was successfully generated");
            } catch(Exception e) {
                JOptionPane.showMessageDialog(null, e);
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch(Exception e) {
                    JOptionPane.showMessageDialog(null,e);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                // Clear previous data
                clearFields();

                // Query to fetch the data
                String sql = "SELECT * FROM staff_information WHERE id=?";
                pst = conn.prepareStatement(sql);
                pst.setString(1, txt_search.getText());
                
                rs = pst.executeQuery();

                // If data is found, set the fields
                if (rs.next()) {
                    txt_id.setText(rs.getString("id"));
                    txt_firstname.setText(rs.getString("first_name"));
                    txt_surname.setText(rs.getString("surname"));
                    txt_dob.setText(rs.getString("Dob"));
                    txt_department.setText(rs.getString("Department"));
                    txt_basicsalary.setText(rs.getString("Salary"));
                    txt_status.setText(rs.getString("Status"));
                    txt_datehired.setText(rs.getString("Date_hired"));
                    txt_jobtitle.setText(rs.getString("job_title"));
                    txt_designation.setText(rs.getString("Designation"));
                } else {
                    // Handle no data found case
                    JOptionPane.showMessageDialog(null, "No record found with the given ID.");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            } finally {
                try {
                    rs.close();
                    pst.close();
                } catch (Exception e) {
                    // Log or handle any exceptions here
                }
            }
        }
    }//GEN-LAST:event_txt_searchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(searchEmpSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(searchEmpSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(searchEmpSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(searchEmpSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new searchEmpSalary().setVisible(true);
            }
        });
    }
    
    private void clearFields() {
        txt_id.setText("");
        txt_firstname.setText("");
        txt_surname.setText("");
        txt_dob.setText("");
        txt_department.setText("");
        txt_basicsalary.setText("");
        txt_designation.setText("");
        txt_datehired.setText("");
        txt_jobtitle.setText("");
        txt_basicsalary.setText("");
        txt_status.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbl_empName;
    private javax.swing.JTextField txt_basicsalary;
    private javax.swing.JTextField txt_datehired;
    private javax.swing.JTextField txt_department;
    private javax.swing.JTextField txt_designation;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_jobtitle;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_status;
    private javax.swing.JTextField txt_surname;
    // End of variables declaration//GEN-END:variables
}
